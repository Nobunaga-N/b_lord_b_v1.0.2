"""
–ì–ª–∞–≤–Ω–æ–µ –æ–∫–Ω–æ GUI
"""

import customtkinter as ctk
from gui.emulator_panel import EmulatorPanel
from gui.status_panel import StatusPanel
from gui.settings_window import SettingsWindow
from gui.functions_window import FunctionsWindow
from gui.bot_controller import BotController


class MainWindow(ctk.CTk):
    """–ì–ª–∞–≤–Ω–æ–µ –æ–∫–Ω–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è Beast Lord Bot v3.0"""

    def __init__(self):
        super().__init__()

        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–∫–Ω–∞
        self.title("Beast Lord Bot v3.0")
        self.geometry("700x700")
        self.resizable(False, False)

        # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç–µ–º—ã
        ctk.set_appearance_mode("dark")
        ctk.set_default_color_theme("blue")

        # –ö–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä –±–æ—Ç–∞ (–±—É–¥–µ—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω –ø–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è –ø–∞–Ω–µ–ª–µ–π)
        self.bot_controller = None

        # –ö–Ω–æ–ø–∫–∏ (–¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º)
        self.btn_start = None
        self.btn_stop = None

        # –°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –æ–∫–Ω–∞
        self._create_layout()

        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞ –±–æ—Ç–∞ (–ø–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è status_panel)
        self.bot_controller = BotController(gui_callback=self.status_panel.update_bot_state)

        # –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–∞—á–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–Ω–æ–ø–æ–∫
        self._update_button_states()

        # –ó–∞–ø—É—Å—Ç–∏—Ç—å –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫
        self._start_periodic_update()

    def _create_layout(self):
        """–°–æ–∑–¥–∞—ë—Ç –±–∞–∑–æ–≤—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É –æ–∫–Ω–∞"""

        # –û—Ç—Å—Ç—É–ø—ã
        padding = {"padx": 10, "pady": 10}

        # ============ –í–µ—Ä—Ö–Ω—è—è —á–∞—Å—Ç—å: –≠–º—É–ª—è—Ç–æ—Ä—ã + –ö–Ω–æ–ø–∫–∏ ============
        top_frame = ctk.CTkFrame(self, fg_color="transparent")
        top_frame.pack(fill="both", expand=True, **padding)

        # === –õ–µ–≤–∞—è —á–∞—Å—Ç—å: –≠–º—É–ª—è—Ç–æ—Ä—ã ===
        self.emulator_panel = EmulatorPanel(top_frame)
        self.emulator_panel.pack(side="left", fill="both", expand=True, padx=(0, 5))

        # === –ü—Ä–∞–≤–∞—è —á–∞—Å—Ç—å: –ö–Ω–æ–ø–∫–∏ ===
        buttons_frame = ctk.CTkFrame(top_frame, corner_radius=10)
        buttons_frame.pack(side="left", fill="y", padx=(5, 0))

        # –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∫–Ω–æ–ø–æ–∫
        btn_header = ctk.CTkLabel(
            buttons_frame,
            text="–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ",
            font=ctk.CTkFont(size=14, weight="bold")
        )
        btn_header.pack(pady=(15, 10))

        # –ö–Ω–æ–ø–∫–∞ "–ó–∞–ø—É—Å—Ç–∏—Ç—å"
        self.btn_start = ctk.CTkButton(
            buttons_frame,
            text="‚ñ∂ –ó–∞–ø—É—Å—Ç–∏—Ç—å",
            width=150,
            height=40,
            font=ctk.CTkFont(size=13, weight="bold"),
            command=self._on_start
        )
        self.btn_start.pack(pady=5, padx=15)

        # –ö–Ω–æ–ø–∫–∞ "–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å"
        self.btn_stop = ctk.CTkButton(
            buttons_frame,
            text="‚èπ –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å",
            width=150,
            height=40,
            font=ctk.CTkFont(size=13, weight="bold"),
            fg_color="#d32f2f",
            hover_color="#b71c1c",
            command=self._on_stop
        )
        self.btn_stop.pack(pady=5, padx=15)

        # –ö–Ω–æ–ø–∫–∞ "–ù–∞—Å—Ç—Ä–æ–π–∫–∏"
        btn_settings = ctk.CTkButton(
            buttons_frame,
            text="‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏",
            width=150,
            height=40,
            font=ctk.CTkFont(size=13, weight="bold"),
            command=self._on_settings
        )
        btn_settings.pack(pady=5, padx=15)

        # –ö–Ω–æ–ø–∫–∞ "–§—É–Ω–∫—Ü–∏–∏"
        btn_functions = ctk.CTkButton(
            buttons_frame,
            text="üìã –§—É–Ω–∫—Ü–∏–∏",
            width=150,
            height=40,
            font=ctk.CTkFont(size=13, weight="bold"),
            command=self._on_functions
        )
        btn_functions.pack(pady=(5, 15), padx=15)

        # ============ –ü–∞–Ω–µ–ª—å 2: –°—Ç–∞—Ç—É—Å ============
        self.status_panel = StatusPanel(self)
        self.status_panel.pack(fill="both", expand=True, **padding)

    def _on_start(self):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ '–ó–∞–ø—É—Å—Ç–∏—Ç—å'"""
        print("\n[INFO] –ö–Ω–æ–ø–∫–∞ '–ó–∞–ø—É—Å—Ç–∏—Ç—å' –Ω–∞–∂–∞—Ç–∞")

        # –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞
        success = self.bot_controller.start()

        if success:
            print("[SUCCESS] –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω")
        else:
            print("[ERROR] –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞")
            # TODO: –ü–æ–∫–∞–∑–∞—Ç—å –¥–∏–∞–ª–æ–≥ —Å –æ—à–∏–±–∫–æ–π

        # –û–±–Ω–æ–≤–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–Ω–æ–ø–æ–∫
        self._update_button_states()

    def _on_stop(self):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ '–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å'"""
        print("\n[INFO] –ö–Ω–æ–ø–∫–∞ '–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å' –Ω–∞–∂–∞—Ç–∞")

        # –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –±–æ—Ç–∞
        success = self.bot_controller.stop()

        if success:
            print("[SUCCESS] –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        else:
            print("[ERROR] –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –±–æ—Ç–∞")

        # –û–±–Ω–æ–≤–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–Ω–æ–ø–æ–∫
        self._update_button_states()

    def _on_settings(self):
        """–û—Ç–∫—Ä—ã–≤–∞–µ—Ç –æ–∫–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–∫"""
        SettingsWindow(self)

    def _on_functions(self):
        """–û—Ç–∫—Ä—ã–≤–∞–µ—Ç –æ–∫–Ω–æ —Ñ—É–Ω–∫—Ü–∏–π"""
        FunctionsWindow(self)

    def _update_button_states(self):
        """–û–±–Ω–æ–≤–ª—è–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å—Ç–∞—Ç—É—Å–∞ –±–æ—Ç–∞"""

        if not self.bot_controller:
            return

        is_running = self.bot_controller.is_running()

        if is_running:
            # –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω
            self.btn_start.configure(state="disabled")
            self.btn_stop.configure(state="normal")
        else:
            # –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
            self.btn_start.configure(state="normal")
            self.btn_stop.configure(state="disabled")

    def _start_periodic_update(self):
        """–ó–∞–ø—É—Å–∫–∞–µ—Ç –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∫–Ω–æ–ø–æ–∫"""
        self._periodic_update()

    def _periodic_update(self):
        """–ü–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ (–∫–∞–∂–¥—É—é 1 —Å–µ–∫—É–Ω–¥—É)"""
        self._update_button_states()

        # –ü–æ–≤—Ç–æ—Ä–∏—Ç—å —á–µ—Ä–µ–∑ 1 —Å–µ–∫—É–Ω–¥—É
        self.after(1000, self._periodic_update)