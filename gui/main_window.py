"""
–ì–ª–∞–≤–Ω–æ–µ –æ–∫–Ω–æ GUI
"""

import customtkinter as ctk
from gui.emulator_panel import EmulatorPanel
from gui.functions_panel import FunctionsPanel
from gui.settings_panel import SettingsPanel


class MainWindow(ctk.CTk):
    """–ì–ª–∞–≤–Ω–æ–µ –æ–∫–Ω–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è Beast Lord Bot v3.0"""

    def __init__(self):
        super().__init__()

        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–∫–Ω–∞
        self.title("Beast Lord Bot v3.0")
        self.geometry("700x950")  # ‚Üê –ë–´–õ–û 900, –°–¢–ê–õ–û 950
        self.resizable(False, False)  # –§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ä–∞–∑–º–µ—Ä

        # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç–µ–º—ã
        ctk.set_appearance_mode("dark")
        ctk.set_default_color_theme("blue")

        # –°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –æ–∫–Ω–∞
        self._create_layout()

    def _create_layout(self):
        """–°–æ–∑–¥–∞—ë—Ç –±–∞–∑–æ–≤—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Å 5 –ø–∞–Ω–µ–ª—è–º–∏"""

        # –û—Ç—Å—Ç—É–ø—ã –¥–ª—è –≤—Å–µ—Ö –ø–∞–Ω–µ–ª–µ–π
        padding = {"padx": 10, "pady": 10}

        # ============ –ü–∞–Ω–µ–ª—å 1: –≠–º—É–ª—è—Ç–æ—Ä—ã ============
        self.emulator_panel = EmulatorPanel(self)
        self.emulator_panel.pack(fill="both", **padding)  # ‚Üê –£–ë–†–ê–õ–ò expand=True

        # ============ –ü–∞–Ω–µ–ª—å 2: –§—É–Ω–∫—Ü–∏–∏ ============
        self.functions_panel = FunctionsPanel(self)
        self.functions_panel.pack(fill="x", **padding)

        # ============ –ü–∞–Ω–µ–ª—å 3: –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ============
        self.settings_panel = SettingsPanel(self)
        self.settings_panel.pack(fill="x", **padding)

        # ============ –ü–∞–Ω–µ–ª—å 4: –°—Ç–∞—Ç—É—Å ============
        self.status_frame = ctk.CTkFrame(self, corner_radius=10)
        self.status_frame.pack(fill="x", **padding)

        status_label = ctk.CTkLabel(
            self.status_frame,
            text="–°—Ç–∞—Ç—É—Å",
            font=ctk.CTkFont(size=16, weight="bold")
        )
        status_label.pack(anchor="w", padx=15, pady=(10, 5))

        # –í—Ä–µ–º–µ–Ω–Ω–∞—è –∑–∞–≥–ª—É—à–∫–∞ –¥–ª—è —Å—Ç–∞—Ç—É—Å–∞
        status_content = ctk.CTkLabel(
            self.status_frame,
            text="–°–æ—Å—Ç–æ—è–Ω–∏–µ: üî¥ –û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω\n–ê–∫—Ç–∏–≤–Ω—ã—Ö —ç–º—É–ª—è—Ç–æ—Ä–æ–≤: 0 / 0\n–û—á–µ—Ä–µ–¥—å: 0",
            font=ctk.CTkFont(size=13),
            justify="left"
        )
        status_content.pack(anchor="w", padx=15, pady=(5, 15))

        # ============ –ü–∞–Ω–µ–ª—å 5: –ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è ============
        self.control_frame = ctk.CTkFrame(self, corner_radius=10)
        self.control_frame.pack(fill="x", **padding)

        # –ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è (—Ç–æ–ª—å–∫–æ –ó–∞–ø—É—Å—Ç–∏—Ç—å –∏ –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å)
        btn_start = ctk.CTkButton(
            self.control_frame,
            text="‚ñ∂ –ó–∞–ø—É—Å—Ç–∏—Ç—å",
            width=180,
            height=40,
            font=ctk.CTkFont(size=14, weight="bold"),
            command=self._on_start
        )
        btn_start.pack(side="left", padx=15, pady=15)

        btn_stop = ctk.CTkButton(
            self.control_frame,
            text="‚èπ –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å",
            width=180,
            height=40,
            font=ctk.CTkFont(size=14, weight="bold"),
            fg_color="#d32f2f",
            hover_color="#b71c1c",
            command=self._on_stop
        )
        btn_stop.pack(side="left", padx=5, pady=15)

    def _on_start(self):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ '–ó–∞–ø—É—Å—Ç–∏—Ç—å' (–ø–æ–∫–∞ –∑–∞–≥–ª—É—à–∫–∞)"""
        print("\n[INFO] –ö–Ω–æ–ø–∫–∞ '–ó–∞–ø—É—Å—Ç–∏—Ç—å' –Ω–∞–∂–∞—Ç–∞")
        print(f"  - –í—ã–±—Ä–∞–Ω–æ —ç–º—É–ª—è—Ç–æ—Ä–æ–≤: {len(self.emulator_panel.get_selected_emulator_ids())}")
        print(f"  - ID —ç–º—É–ª—è—Ç–æ—Ä–æ–≤: {self.emulator_panel.get_selected_emulator_ids()}")
        print(f"  - –ê–∫—Ç–∏–≤–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π: {self.functions_panel.get_active_functions()}")
        print(f"  - Max concurrent: {self.settings_panel.get_max_concurrent()}")
        print("[INFO] TODO: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –∑–∞–ø—É—Å–∫ –±–æ—Ç–∞ –Ω–∞ —Å–ª–µ–¥—É—é—â–∏—Ö —ç—Ç–∞–ø–∞—Ö\n")

    def _on_stop(self):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ '–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å' (–ø–æ–∫–∞ –∑–∞–≥–ª—É—à–∫–∞)"""
        print("\n[INFO] –ö–Ω–æ–ø–∫–∞ '–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å' –Ω–∞–∂–∞—Ç–∞")
        print("[INFO] TODO: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –æ—Å—Ç–∞–Ω–æ–≤–∫—É –±–æ—Ç–∞ –Ω–∞ —Å–ª–µ–¥—É—é—â–∏—Ö —ç—Ç–∞–ø–∞—Ö\n")