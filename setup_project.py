import os


def create_structure():
    """–°–æ–∑–¥–∞–µ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø—Ä–æ–µ–∫—Ç–∞ Beast Lord Bot v3.0"""

    # –ë–∞–∑–æ–≤—ã–µ –ø–∞–ø–∫–∏
    folders = [
        "gui",
        "core",
        "functions/building",
        "functions/research",
        "functions/wilds",
        "functions/coop",
        "functions/tiles",
        "functions/prime_times",
        "functions/shield",
        "functions/mail_rewards",
        "utils",
        "configs",
        "data/logs",
        "data/screenshots",
        "data/templates/game_loading",
        "data/templates/building",
        "data/templates/research",
        "data/templates/wilds",
        "data/templates/coop",
        "data/templates/tiles",
        "data/templates/prime_times",
        "data/templates/shield",
        "data/templates/mail_rewards",
    ]

    print("üöÄ –°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø—Ä–æ–µ–∫—Ç–∞ Beast Lord Bot v3.0\n")

    # –°–æ–∑–¥–∞—Ç—å –ø–∞–ø–∫–∏
    for folder in folders:
        os.makedirs(folder, exist_ok=True)
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω–∞ –ø–∞–ø–∫–∞: {folder}")

    # –°–æ–∑–¥–∞—Ç—å __init__.py —Ñ–∞–π–ª—ã
    init_files = [
        "gui/__init__.py",
        "core/__init__.py",
        "functions/__init__.py",
        "functions/building/__init__.py",
        "functions/research/__init__.py",
        "functions/wilds/__init__.py",
        "functions/coop/__init__.py",
        "functions/tiles/__init__.py",
        "functions/prime_times/__init__.py",
        "functions/shield/__init__.py",
        "functions/mail_rewards/__init__.py",
        "utils/__init__.py",
    ]

    for init_file in init_files:
        open(init_file, 'a').close()
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª: {init_file}")

    # .gitkeep –¥–ª—è –ø—É—Å—Ç—ã—Ö –ø–∞–ø–æ–∫
    gitkeep_files = [
        "data/logs/.gitkeep",
        "data/screenshots/.gitkeep",
        "data/templates/building/.gitkeep",
        "data/templates/research/.gitkeep",
        "data/templates/wilds/.gitkeep",
        "data/templates/coop/.gitkeep",
        "data/templates/tiles/.gitkeep",
        "data/templates/prime_times/.gitkeep",
        "data/templates/shield/.gitkeep",
        "data/templates/mail_rewards/.gitkeep",
    ]

    for gitkeep in gitkeep_files:
        open(gitkeep, 'a').close()

    # –°–æ–∑–¥–∞—Ç—å –±–∞–∑–æ–≤—ã–µ Python —Ñ–∞–π–ª—ã —Å –∑–∞–≥–ª—É—à–∫–∞–º–∏
    create_base_files()

    # –°–æ–∑–¥–∞—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
    create_config_files()

    # –°–æ–∑–¥–∞—Ç—å requirements.txt
    create_requirements()

    # –°–æ–∑–¥–∞—Ç—å .gitignore
    create_gitignore()

    # –°–æ–∑–¥–∞—Ç—å README.md
    create_readme()

    print("\n‚ú® –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞!")
    print("\nüìù –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
    print("1. –°–∫–æ–ø–∏—Ä—É–π 3 —Å–∫—Ä–∏–Ω—à–æ—Ç–∞ –≤ data/templates/game_loading/:")
    print("   - loading_screen.png")
    print("   - popup_close.png")
    print("   - world_map.png")
    print("2. –£—Å—Ç–∞–Ω–æ–≤–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: pip install -r requirements.txt")
    print("3. –ó–∞–ø—É—Å—Ç–∏: python main_gui.py")


def create_base_files():
    """–°–æ–∑–¥–∞–µ—Ç –±–∞–∑–æ–≤—ã–µ Python —Ñ–∞–π–ª—ã —Å –∑–∞–≥–ª—É—à–∫–∞–º–∏"""

    print("\nüìù –°–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑–æ–≤—ã—Ö Python —Ñ–∞–π–ª–æ–≤...\n")

    # main_gui.py
    main_gui = '''"""
–¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ Beast Lord Bot v3.0
"""

def main():
    """–ó–∞–ø—É—Å–∫ GUI –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
    print("üöÄ Beast Lord Bot v3.0")
    print("TODO: –ó–∞–ø—É—Å–∫ GUI")

if __name__ == "__main__":
    main()
'''
    with open("main_gui.py", "w", encoding="utf-8") as f:
        f.write(main_gui)
    print("‚úÖ –°–æ–∑–¥–∞–Ω: main_gui.py")

    # GUI —Ñ–∞–π–ª—ã
    gui_files = {
        "gui/main_window.py": '''"""
–ì–ª–∞–≤–Ω–æ–µ –æ–∫–Ω–æ GUI
"""

class MainWindow:
    """–ì–ª–∞–≤–Ω–æ–µ –æ–∫–Ω–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""

    def __init__(self):
        # TODO: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è customtkinter –æ–∫–Ω–∞
        pass
''',
        "gui/emulator_panel.py": '''"""
–ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —ç–º—É–ª—è—Ç–æ—Ä–∞–º–∏
"""

class EmulatorPanel:
    """–ü–∞–Ω–µ–ª—å —Å —á–µ–∫–±–æ–∫—Å–∞–º–∏ —ç–º—É–ª—è—Ç–æ—Ä–æ–≤"""

    def __init__(self, parent):
        # TODO: –°–æ–∑–¥–∞–Ω–∏–µ –ø–∞–Ω–µ–ª–∏
        pass
''',
        "gui/functions_panel.py": '''"""
–ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏—è–º–∏
"""

class FunctionsPanel:
    """–ü–∞–Ω–µ–ª—å —Å —á–µ–∫–±–æ–∫—Å–∞–º–∏ —Ñ—É–Ω–∫—Ü–∏–π"""

    def __init__(self, parent):
        # TODO: –°–æ–∑–¥–∞–Ω–∏–µ –ø–∞–Ω–µ–ª–∏ —Å 8 —á–µ–∫–±–æ–∫—Å–∞–º–∏
        pass
''',
        "gui/settings_panel.py": '''"""
–ü–∞–Ω–µ–ª—å –Ω–∞—Å—Ç—Ä–æ–µ–∫
"""

class SettingsPanel:
    """–ü–∞–Ω–µ–ª—å –Ω–∞—Å—Ç—Ä–æ–µ–∫ (max_concurrent –∏ –¥—Ä.)"""

    def __init__(self, parent):
        # TODO: –°–æ–∑–¥–∞–Ω–∏–µ –ø–∞–Ω–µ–ª–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫
        pass
''',
        "gui/status_panel.py": '''"""
–ü–∞–Ω–µ–ª—å —Å—Ç–∞—Ç—É—Å–∞
"""

class StatusPanel:
    """–ü–∞–Ω–µ–ª—å —Å—Ç–∞—Ç—É—Å–∞ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏"""

    def __init__(self, parent):
        # TODO: –°–æ–∑–¥–∞–Ω–∏–µ –ø–∞–Ω–µ–ª–∏ —Å—Ç–∞—Ç—É—Å–∞
        pass
''',
        "gui/bot_controller.py": '''"""
–ö–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä –ø—Ä–æ—Ü–µ—Å—Å–∞ –±–æ—Ç–∞
"""

class BotController:
    """–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–ø—É—Å–∫–æ–º/–æ—Å—Ç–∞–Ω–æ–≤–∫–æ–π –±–æ—Ç–∞"""

    def __init__(self):
        # TODO: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞
        pass

    def start(self):
        """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
        pass

    def stop(self):
        """–û—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–æ—Ç–∞"""
        pass
'''
    }

    for filepath, content in gui_files.items():
        with open(filepath, "w", encoding="utf-8") as f:
            f.write(content)
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω: {filepath}")

    # Core —Ñ–∞–π–ª—ã
    core_files = {
        "core/bot_orchestrator.py": '''"""
–ì–ª–∞–≤–Ω—ã–π –æ—Ä–∫–µ—Å—Ç—Ä–∞—Ç–æ—Ä –±–æ—Ç–∞
"""

class BotOrchestrator:
    """–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≥–ª–∞–≤–Ω—ã–º —Ü–∏–∫–ª–æ–º –±–æ—Ç–∞"""

    def __init__(self):
        # TODO: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ—Ä–∫–µ—Å—Ç—Ä–∞—Ç–æ—Ä–∞
        pass

    def run(self):
        """–ó–∞–ø—É—Å–∫ –≥–ª–∞–≤–Ω–æ–≥–æ —Ü–∏–∫–ª–∞"""
        pass
''',
        "core/emulator_manager.py": '''"""
–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —ç–º—É–ª—è—Ç–æ—Ä–∞–º–∏
"""

class EmulatorManager:
    """–ó–∞–ø—É—Å–∫/–æ—Å—Ç–∞–Ω–æ–≤–∫–∞ —ç–º—É–ª—è—Ç–æ—Ä–æ–≤ —á–µ—Ä–µ–∑ ldconsole"""

    def __init__(self):
        # TODO: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞
        pass

    def start_emulator(self, emulator_id):
        """–ó–∞–ø—É—Å–∫ —ç–º—É–ª—è—Ç–æ—Ä–∞"""
        pass

    def stop_emulator(self, emulator_id):
        """–û—Å—Ç–∞–Ω–æ–≤–∫–∞ —ç–º—É–ª—è—Ç–æ—Ä–∞"""
        pass
''',
        "core/game_launcher.py": '''"""
–ó–∞–ø—É—Å–∫ –∏–≥—Ä—ã –∏ –æ–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏
"""

class GameLauncher:
    """–ó–∞–ø—É—Å–∫ Beast Lord –∏ –æ–∂–∏–¥–∞–Ω–∏–µ –ø–æ–ª–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏"""

    def __init__(self, emulator):
        self.emulator = emulator

    def launch_and_wait(self):
        """–ó–∞–ø—É—Å–∫–∞–µ—Ç –∏–≥—Ä—É –∏ –∂–¥–µ—Ç –∑–∞–≥—Ä—É–∑–∫–∏"""
        pass
'''
    }

    for filepath, content in core_files.items():
        with open(filepath, "w", encoding="utf-8") as f:
            f.write(content)
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω: {filepath}")

    # Utils —Ñ–∞–π–ª—ã
    utils_files = {
        "utils/adb_controller.py": '''"""
–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ ADB –∫–æ–º–∞–Ω–¥–∞–º–∏
"""

def execute_command(command):
    """–í—ã–ø–æ–ª–Ω—è–µ—Ç –∫–æ–º–∞–Ω–¥—É –≤ shell"""
    pass

def press_key(emulator, key):
    """–ù–∞–∂–∏–º–∞–µ—Ç –∫–ª–∞–≤–∏—à—É –Ω–∞ —ç–º—É–ª—è—Ç–æ—Ä–µ"""
    pass

def tap(emulator, x, y):
    """–¢–∞–ø –ø–æ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º"""
    pass
''',
        "utils/image_recognition.py": '''"""
–†–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π —á–µ—Ä–µ–∑ OpenCV
"""

def find_image(emulator, template_path, threshold=0.8):
    """–ò—â–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–∞ —ç–∫—Ä–∞–Ω–µ —ç–º—É–ª—è—Ç–æ—Ä–∞"""
    pass

def get_screenshot(emulator):
    """–ü–æ–ª—É—á–∞–µ—Ç —Å–∫—Ä–∏–Ω—à–æ—Ç —ç–∫—Ä–∞–Ω–∞"""
    pass
''',
        "utils/ldconsole_manager.py": '''"""
–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å ldconsole.exe
"""

def find_ldconsole():
    """–ò—â–µ—Ç ldconsole.exe –Ω–∞ –¥–∏—Å–∫–∞—Ö C:\\, D:\\, E\\"""
    pass

def scan_emulators(ldconsole_path):
    """–°–∫–∞–Ω–∏—Ä—É–µ—Ç —Å–ø–∏—Å–æ–∫ —ç–º—É–ª—è—Ç–æ—Ä–æ–≤"""
    pass

def start_emulator(ldconsole_path, emulator_id):
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç —ç–º—É–ª—è—Ç–æ—Ä"""
    pass

def stop_emulator(ldconsole_path, emulator_id):
    """–û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —ç–º—É–ª—è—Ç–æ—Ä"""
    pass
''',
        "utils/config_manager.py": '''"""
–†–∞–±–æ—Ç–∞ —Å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–º–∏ —Ñ–∞–π–ª–∞–º–∏
"""

def load_config(config_path):
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç –∫–æ–Ω—Ñ–∏–≥ –∏–∑ YAML"""
    pass

def save_config(config_path, config_data):
    """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç –∫–æ–Ω—Ñ–∏–≥ –≤ YAML"""
    pass
'''
    }

    for filepath, content in utils_files.items():
        with open(filepath, "w", encoding="utf-8") as f:
            f.write(content)
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω: {filepath}")

    # Functions –±–∞–∑–æ–≤—ã–π –∫–ª–∞—Å—Å
    base_function = '''"""
–ë–∞–∑–æ–≤—ã–π –∫–ª–∞—Å—Å –¥–ª—è –≤—Å–µ—Ö –∏–≥—Ä–æ–≤—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π
"""

class BaseFunction:
    """–ë–∞–∑–æ–≤—ã–π –∫–ª–∞—Å—Å —Ñ—É–Ω–∫—Ü–∏–∏"""

    def __init__(self, emulator):
        self.emulator = emulator
        self.name = "BaseFunction"

    def can_execute(self):
        """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –º–æ–∂–Ω–æ –ª–∏ –≤—ã–ø–æ–ª–Ω—è—Ç—å —Ñ—É–Ω–∫—Ü–∏—é —Å–µ–π—á–∞—Å"""
        return True

    def execute(self):
        """–û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è"""
        raise NotImplementedError(f"{self.name}.execute() –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω")

    def run(self):
        """–û–±–µ—Ä—Ç–∫–∞ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º"""
        if not self.can_execute():
            return False

        try:
            self.execute()
            return True
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –≤ {self.name}: {e}")
            return False
'''
    with open("functions/base_function.py", "w", encoding="utf-8") as f:
        f.write(base_function)
    print("‚úÖ –°–æ–∑–¥–∞–Ω: functions/base_function.py")

    # –§—É–Ω–∫—Ü–∏–∏ (–∑–∞–≥–ª—É—à–∫–∏)
    function_files = {
        "functions/building/building.py": "BuildingFunction",
        "functions/research/research.py": "ResearchFunction",
        "functions/wilds/wilds.py": "WildsFunction",
        "functions/coop/coop.py": "CoopFunction",
        "functions/tiles/tiles.py": "TilesFunction",
        "functions/prime_times/prime_times.py": "PrimeTimesFunction",
        "functions/shield/shield.py": "ShieldFunction",
        "functions/mail_rewards/mail_rewards.py": "MailRewardsFunction",
    }

    for filepath, classname in function_files.items():
        content = f'''"""
–§—É–Ω–∫—Ü–∏—è: {classname}
"""

from functions.base_function import BaseFunction

class {classname}(BaseFunction):
    """TODO: –†–µ–∞–ª–∏–∑–∞—Ü–∏—è —Ñ—É–Ω–∫—Ü–∏–∏"""

    def __init__(self, emulator):
        super().__init__(emulator)
        self.name = "{classname}"

    def execute(self):
        """TODO: –õ–æ–≥–∏–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è"""
        pass
'''
        with open(filepath, "w", encoding="utf-8") as f:
            f.write(content)
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω: {filepath}")


def create_config_files():
    """–°–æ–∑–¥–∞–µ—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã"""

    # gui_config.yaml
    gui_config = """# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ GUI –∏ —Ñ—É–Ω–∫—Ü–∏–π
# –°–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –∫–Ω–æ–ø–∫–∏ "–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏"

emulators:
  enabled: []  # ID –≤–∫–ª—é—á–µ–Ω–Ω—ã—Ö —ç–º—É–ª—è—Ç–æ—Ä–æ–≤ (–Ω–∞–ø—Ä–∏–º–µ—Ä: [0, 1, 7])

functions:
  building: false          # –°—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ
  research: false          # –ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è
  wilds: false             # –î–∏–∫–∏–µ
  coop: false              # –ö–æ–æ–ø–µ—Ä–∞—Ü–∏–∏
  tiles: false             # –°–±–æ—Ä —Å –ø–ª–∏—Ç–æ–∫
  prime_times: false       # –ü—Ä–∞–π–º —Ç–∞–π–º—ã
  shield: false            # –©–∏—Ç
  mail_rewards: false      # –ù–∞–≥—Ä–∞–¥—ã —Å –ø–æ—á—Ç—ã

settings:
  max_concurrent: 3        # –ú–∞–∫—Å–∏–º—É–º –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —ç–º—É–ª—è—Ç–æ—Ä–æ–≤ (1-10)
"""

    with open("configs/gui_config.yaml", "w", encoding="utf-8") as f:
        f.write(gui_config)
    print("‚úÖ –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª: configs/gui_config.yaml")

    # emulators.yaml
    emulators_config = """# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–∫–∞–Ω–∏—Ä—É–µ—Ç—Å—è —á–µ—Ä–µ–∑ ldconsole
# –û–±–Ω–æ–≤–ª—è–µ—Ç—Å—è –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –∫–Ω–æ–ø–∫–∏ "–û–±–Ω–æ–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫" –≤ GUI
# –ü–æ—Ä—Ç—ã —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞—é—Ç—Å—è –ø–æ —Ñ–æ—Ä–º—É–ª–µ: port = 5554 + (id * 2)

emulators: []
"""

    with open("configs/emulators.yaml", "w", encoding="utf-8") as f:
        f.write(emulators_config)
    print("‚úÖ –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª: configs/emulators.yaml")


def create_requirements():
    """–°–æ–∑–¥–∞–µ—Ç requirements.txt"""
    requirements = """customtkinter>=5.2.0
pure-python-adb>=0.3.0.dev0
opencv-python>=4.8.0
Pillow>=10.0.0
loguru>=0.7.0
PyYAML>=6.0
"""

    with open("requirements.txt", "w", encoding="utf-8") as f:
        f.write(requirements)
    print("‚úÖ –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª: requirements.txt")


def create_gitignore():
    """–°–æ–∑–¥–∞–µ—Ç .gitignore"""
    gitignore = """# Python
__pycache__/
*.py[cod]
*.so
*.egg
*.egg-info/
dist/
build/
*.pyd

# –í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ
venv/
env/
ENV/

# –î–∞–Ω–Ω—ã–µ
data/logs/*.log
!data/logs/.gitkeep
data/screenshots/*.png
!data/screenshots/.gitkeep
data/*.db

# –ö–æ–Ω—Ñ–∏–≥–∏ (–∞–≤—Ç–æ–≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º—ã–µ)
configs/emulators.yaml

# IDE
.vscode/
.idea/
*.swp
*.swo

# OS
.DS_Store
Thumbs.db
desktop.ini

# Temp
*.tmp
temp/
"""

    with open(".gitignore", "w", encoding="utf-8") as f:
        f.write(gitignore)
    print("‚úÖ –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª: .gitignore")


def create_readme():
    """–°–æ–∑–¥–∞–µ—Ç README.md"""
    readme = """# Beast Lord Bot v3.0

–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –±–æ—Ç –¥–ª—è –∏–≥—Ä—ã Beast Lord: The New Land

## –£—Å—Ç–∞–Ω–æ–≤–∫–∞

1. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏:
```bash
pip install -r requirements.txt
```

2. –ó–∞–ø—É—Å—Ç–∏—Ç—å GUI:
```bash
python main_gui.py
```

## –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è

- Windows OS
- LDPlayer 9
- Python 3.8+

## –¢–µ–∫—É—â–∏–π —ç—Ç–∞–ø —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏

**–≠–¢–ê–ü 0** - –ë–∞–∑–æ–≤—ã–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª (MVP)
"""

    with open("README.md", "w", encoding="utf-8") as f:
        f.write(readme)
    print("‚úÖ –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª: README.md")


if __name__ == "__main__":
    create_structure()